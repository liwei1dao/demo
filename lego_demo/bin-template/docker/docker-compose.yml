version: "3.7"

# 申明同一个网络
networks:
  net:
    name: net

# 游戏数据卷
volumes:
  consuldata:
    name: consuldata
  redisdata:
    name: redisdata
  mongodb-1data:
    name: mongodb-1data
  mongodb-2data:
    name: mongodb-2data
  mongodb-3data:
    name: mongodb-3data

# 服务
services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
    - "6379:6379"
    networks:
      net:
        # 给网络取别名,可以用redis和cache找到
        aliases:
          - cache
    command: /etc/redis/redis.conf
    volumes:
      # 持久存储redis的数据
      - redisdata:/data
      # 挂载本地配置文件
      - ./redis.conf:/etc/redis/redis.conf
      # 时间同步
      # - /etc/localtime:/etc/localtime
  mongodb-1:
    image: mongo:latest
    container_name: mongodb-1
    restart: always
    ports:
        - 37017:27017
    networks:
      net:
        # 给网络取别名,可以用redis和cache找到
        aliases:
          - db1
    volumes:
      - mongodb-1data:/data/db:rw
      - mongodb-1data:/data/configdb:rw
      - ./mongod.conf:/etc/mongo/mongod.conf:rw
      - ./mongodb.key:/data/mongodb.key
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: 123
    command: mongod -f /etc/mongo/mongod.conf --replSet mongoReplSet --keyFile /data/mongodb.key
    entrypoint:
        - bash
        - -c
        - |
          chmod 400 /data/mongodb.key
          chown 999:999 /data/mongodb.key
          exec docker-entrypoint.sh $$@
  mongodb-2:
    image: mongo:latest
    container_name: mongodb-2
    restart: always
    ports:
        - 37018:27017
    networks:
      net:
        # 给网络取别名,可以用redis和cache找到
        aliases:
          - db2
    volumes:
      - mongodb-2data:/data/db:rw
      - mongodb-2data:/data/configdb:rw
      - ./mongod.conf:/etc/mongo/mongod.conf:rw
      - ./mongodb.key:/data/mongodb.key
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: 123
    command: mongod -f /etc/mongo/mongod.conf --replSet mongoReplSet --keyFile /data/mongodb.key
    entrypoint:
        - bash
        - -c
        - |
          chmod 400 /data/mongodb.key
          chown 999:999 /data/mongodb.key
          exec docker-entrypoint.sh $$@
  mongodb-3:
    image: mongo:latest
    container_name: mongodb-3
    restart: always
    ports:
        - 37019:27017
    networks:
      net:
        # 给网络取别名,可以用redis和cache找到
        aliases:
          - db3
    volumes:
      - mongodb-3data:/data/db:rw
      - mongodb-3data:/data/configdb:rw
      - ./mongod.conf:/etc/mongo/mongod.conf:rw
      - ./mongodb.key:/data/mongodb.key
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: 123
    command: mongod -f /etc/mongo/mongod.conf --replSet mongoReplSet --keyFile /data/mongodb.key
    entrypoint:
        - bash
        - -c
        - |
          chmod 400 /data/mongodb.key
          chown 999:999 /data/mongodb.key
          exec docker-entrypoint.sh $$@
  mongodb-init:
    image: mongo:latest
    depends_on:
        - mongodb-1
        - mongodb-2
        - mongodb-3
    restart: on-failure:5
    command:                #这里一定要注意使用局域网ip或者外网ip 不要使用127.0.0.1或者localhost 
        - mongo
        - mongodb://root:123@192.168.0.106:37017/admin
        - --eval
        - 'rs.initiate({ _id: "mongoReplSet", members: [{_id:1,host:"192.168.0.106:37017"},{_id:2,host:"192.168.0.106:37018"},{_id:3,host:"192.168.0.106:37019"}]})'
  consul:
    image: consul:latest
    container_name: consul
    ports:
    - "8500:8500"
    command: consul agent -server -bootstrap -data-dir /consul/data -node=ylconsul -bind=0.0.0.0 -config-dir=/consul/config/ -client=0.0.0.0 -ui
    networks:
      net:
        # 给网络取别名,可以用consul和discovery找到
        aliases:
          - discovery
    volumes:
      - consuldata:/consul/data    
  nats:
    image: nats:latest
    container_name: nats
    ports:
    - "4222:4222"
    - "6222:6222"
    - "8222:8222"
    command: "-c /etc/nats/nats.conf"
    networks:
      net:
        aliases:
          - nats
    volumes:
      - ./nats.conf:/etc/nats/nats.conf:rw